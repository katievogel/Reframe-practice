{"version":3,"sources":["com/github/katievogel/reframe_practice/core.cljs"],"mappings":";AAaA,AAAKA,AAAiB,AAAA,AAACC;AAMvB,AAAKC,AACH,AAACC,AACC;AAAA,AACE,AAAA,AAACC,AAAoB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA,AAAAA,AAAA,AAA0BL;;AAErD,AAAA,AAAMM;AAAN,AACE,AAAA,AAACC;;AACD,AAACL,AAAAA,AAAAA;;AAEH,AAAAM,AAAOY;AAAP,AAAA,AAAAX,AAAAC;AAAAC,AAAA,AAAAC,AAAAJ,AAAA,AAAAK,AAAA;AAAA,AAAA,AAAAH,AAAAC;;AAAA,AAAA,AAAA,AAAA,AAAAG,AAAA,AAAAN,AAAA,AAAAO,AAAA,AAAA,AAAAC,AAAAR,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA;AAAA,AAAAO;;AAAAE,AAAA,AAAAH,AAAA;AAAA,AAAA,AAAA,AAAAI,AAAAD,AAAA,AAAAE;AAAA,AAAA,AAAA,AAAA,AAAAF,AAAA;AAAA,AAAA,AAAAA,AAAA,AAAAH,AAAA,AAAA,AAA2CR;;AAA3C;;AAAA;AAAA,AAAA,AAAAI,AAAAD","names":["com.github.katievogel.reframe-practice.core/app-container-el","goog.dom/getElement","com.github.katievogel.reframe-practice.core/begin-render!","goog.functions/once","reagent.dom.render","com.github.katievogel.reframe-practice.views/ReframePracticeApp","com.github.katievogel.reframe-practice.core/init!","cljs.core.println","target-obj-45705","*runtime-state*-orig-val__45709","oops.state/*runtime-state*","*runtime-state*-temp-val__45710","oops.state/prepare-state","js/Error","call-info-45707","next-obj-45708","oops.core/validate-object-access-dynamically","fn-45706","oops.core/validate-fn-call-dynamically","oops.state/get-last-access-modifier","js/window"],"sourcesContent":["(ns com.github.katievogel.reframe-practice.core\n  (:require\n    [com.github.katievogel.reframe-practice.funppl :as funppl]\n    [com.github.katievogel.reframe-practice.hello :as hello]\n    [com.github.katievogel.reframe-practice.login :as login]\n    [com.github.katievogel.reframe-practice.paragraph :as paragraph]\n    [com.github.katievogel.reframe-practice.views :refer [ReframePracticeApp]]\n    [goog.dom :as gdom]\n    [goog.functions :as gfunctions]\n    [oops.core :refer [ocall]]\n    [re-frame.core :as rf]\n    [reagent.dom :as reagent-dom]))\n\n(def app-container-el (gdom/getElement \"appContainer\"))\n\n;(defn on-refresh\n;  (rf/clear-subscription-cache!)\n;  (reagent-dom/force-update-all))\n\n(def begin-render!\n  (gfunctions/once\n    (fn []\n      (reagent-dom/render [(var ReframePracticeApp)] app-container-el))))\n\n(defn init! []\n  (println \"it's running\")\n  (begin-render!))\n\n(ocall js/window \"addEventListener\" \"load\" init!)"]}